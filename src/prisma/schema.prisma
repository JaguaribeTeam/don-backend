datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id_usuario     String    @id @default(uuid())
  nome           String
  cpf            String    @unique
  email          String    @unique
  senha          String
  dt_nascimento  String
  tipo_sanguineo String
  cep            String
  logradouro     String
  numero         Int
  complemento    String
  bairro         String
  cidade         String
  estado         String
  admin          Boolean   @default(false)
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  doador         Doador?
  receptor       Receptor?
}

model Instituicao {
  id_instituicao    String              @id @default(uuid())
  nome              String
  cnpj              String              @unique
  telefone          String
  email             String              @unique
  cep               String
  logradouro        String
  numero            Int
  complemento       String
  bairro            String
  cidade            String
  estado            String
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
  orgao_instituicao Orgao_Instituicao[]
}

model Orgao {
  id_orgao          String              @id @default(uuid())
  nome              String              @unique
  doador_orgao      Doador_Orgao[]
  orgao_instituicao Orgao_Instituicao[]
  receptor_orgao    Receptor_Orgao[]
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
}

model Doador {
  id_doador        String         @id @default(uuid())
  usuario          Usuario        @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario       String         @unique
  pretencao_doacao Boolean
  doador_orgao     Doador_Orgao[]
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
}

model Doador_Orgao {
  doador     Doador   @relation(fields: [id_doador], references: [id_doador])
  id_doador  String
  orgao      Orgao    @relation(fields: [id_orgao], references: [id_orgao])
  id_orgao   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([id_doador, id_orgao])
}

model Orgao_Instituicao {
  orgao          Orgao       @relation(fields: [id_orgao], references: [id_orgao])
  id_orgao       String
  instituicao    Instituicao @relation(fields: [id_instituicao], references: [id_instituicao])
  id_instituicao String
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt

  @@id([id_orgao, id_instituicao])
}

model Receptor {
  id_receptor       Int              @id @default(autoincrement())
  id_usuario        String           @unique
  usuario           Usuario          @relation(fields: [id_usuario], references: [id_usuario])
  tempo_fila_espera DateTime
  receptor_orgao    Receptor_Orgao[]
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
}

model Receptor_Orgao {
  orgao       Orgao    @relation(fields: [id_orgao], references: [id_orgao])
  id_orgao    String
  receptor    Receptor @relation(fields: [id_receptor], references: [id_receptor])
  id_receptor Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@id([id_orgao, id_receptor])
}
